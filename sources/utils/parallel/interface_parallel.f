!                    *************************
                     MODULE INTERFACE_PARALLEL
!                    *************************
!
!
!***********************************************************************
! PARALLEL VERSION 7.0                                  31/07/2012
!***********************************************************************
!
!brief    INTERFACES OF PARALLEL LIBRARY PUBLIC SUBROUTINES
!+
!
!history  J-M HERVOUET (LNHE)
!+        31/07/2012
!+        V6P2
!+   Original version.
!
!history  J-M HERVOUET (LNHE)
!+        09/05/2014
!+        V7P0
!+   Adding MPI communications by integers.
!
!history  R.NHEILI (Univerte de Perpignan, DALI)
!+        24/02/2016
!+        V7
!+      Adding compensation in the sum from the processors
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!
      INTERFACE
!
!-----------------------------------------------------------------------
!
!     DEFINITION OF INTERFACES
!
      SUBROUTINE ERRPVM(ERROR_NUMBER)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: ERROR_NUMBER
      END SUBROUTINE
!
      SUBROUTINE GET_MPI_PARAMETERS
     &                   (P_INTEGER,P_REAL8,P_UB,P_COMM_WORLD,P_SUCCESS)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(OUT) :: P_INTEGER,P_REAL8,P_UB
        INTEGER, INTENT(OUT) :: P_COMM_WORLD,P_SUCCESS
      END SUBROUTINE
!
      SUBROUTINE ORG_CHARAC_TYPE1(NOMB,TRACE,CHARACTERISTIC)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)    :: NOMB
        INTEGER, INTENT(INOUT) :: CHARACTERISTIC
        LOGICAL, INTENT(IN)    :: TRACE
      END SUBROUTINE
!
      DOUBLE PRECISION FUNCTION P_DMAX(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        DOUBLE PRECISION, INTENT(IN) :: MYPART
      END FUNCTION
!
      DOUBLE PRECISION FUNCTION P_DMIN(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        DOUBLE PRECISION, INTENT(IN) :: MYPART
      END FUNCTION
!
      DOUBLE PRECISION FUNCTION P_DSUM(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        DOUBLE PRECISION, INTENT(IN) :: MYPART
      END FUNCTION
!
      DOUBLE PRECISION FUNCTION P_DSUMERR(PARTIAL)
        IMPLICIT NONE
        DOUBLE PRECISION, INTENT(IN) :: PARTIAL(2)
      END FUNCTION
!
      INTEGER FUNCTION P_IMAX(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: MYPART
      END FUNCTION
!
      INTEGER FUNCTION P_IMIN(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: MYPART
      END FUNCTION
!
      INTEGER FUNCTION P_ISUM(MYPART)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: MYPART
      END FUNCTION
!
      SUBROUTINE P_INIT(CHAINE,NCAR,IPID,NCSIZE)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(OUT)            :: NCAR,IPID,NCSIZE
        CHARACTER(LEN=250), INTENT(OUT) :: CHAINE
      END SUBROUTINE
!
      SUBROUTINE P_IREAD(BUFFER,NBYTES,SOURCE,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NBYTES,SOURCE,ITAG,IREQ
        DOUBLE PRECISION, INTENT(OUT) :: BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_IREADI(BUFFER,NVAL,SOURCE,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NVAL,SOURCE,ITAG,IREQ
        INTEGER, INTENT(OUT) :: BUFFER(NVAL)
      END SUBROUTINE
!
      SUBROUTINE P_IREADI8(BUFFER,NVAL,SOURCE,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NVAL,SOURCE,ITAG,IREQ
        INTEGER(KIND=K8), INTENT(OUT) :: BUFFER(NVAL)
      END SUBROUTINE
!
      SUBROUTINE P_IREAD_C(BUFFER,NBYTES,SOURCE,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)           :: NBYTES,SOURCE,ITAG,IREQ
        CHARACTER(LEN=*), INTENT(OUT) :: BUFFER
      END SUBROUTINE
!
      SUBROUTINE P_IWRIT(BUFFER,NBYTES,DEST,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)          :: NBYTES,DEST,ITAG,IREQ
        DOUBLE PRECISION, INTENT(IN) :: BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_IWRITI(BUFFER,NVAL,DEST,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)          :: NVAL,DEST,ITAG,IREQ
        INTEGER, INTENT(IN) :: BUFFER(NVAL)
      END SUBROUTINE
!
      SUBROUTINE P_IWRITI8(BUFFER,NVAL,DEST,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)          :: NVAL,DEST,ITAG,IREQ
        INTEGER(KIND=K8), INTENT(IN) :: BUFFER(NVAL)
      END SUBROUTINE
!
      SUBROUTINE P_IWRIT_C(BUFFER,NBYTES,DEST,ITAG,IREQ)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)          :: NBYTES,DEST,ITAG,IREQ
        CHARACTER(LEN=*), INTENT(IN) :: BUFFER
      END
!
      SUBROUTINE P_LSUM(IARG1,LARG2)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: IARG1
        LOGICAL, DIMENSION(IARG1), INTENT(INOUT) :: LARG2
      END SUBROUTINE
!
      SUBROUTINE P_MAIL(CHAINE,NCAR)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)               :: NCAR
        CHARACTER(LEN=250), INTENT(INOUT) :: CHAINE
      END SUBROUTINE
!
      SUBROUTINE P_MPI_ALLTOALLV
     &(SEND_BUFFER,NSEND,SEND_DISPL,SEND_DATYP,RECV_BUFFER,NRECV,
     & RECV_DISPL,RECV_DATYP,IERR)
        USE DECLARATIONS_PARALLEL
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)  :: NSEND(*),SEND_DISPL(*),
     &                          SEND_DATYP,NRECV(*)
        INTEGER, INTENT(IN)  :: RECV_DISPL(*),RECV_DATYP
        INTEGER, INTENT(OUT) :: IERR
        TYPE(CHARAC_TYPE), INTENT(IN)  :: SEND_BUFFER(*)
        TYPE(CHARAC_TYPE), INTENT(OUT) :: RECV_BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_MPI_ALLTOALLV_ALG
     &(SEND_BUFFER,NSEND,SEND_DISPL,SEND_DATYP,RECV_BUFFER,NRECV,
     & RECV_DISPL,RECV_DATYP,IERR)
      USE DECLARATIONS_PARALLEL
      USE DECLARATIONS_SPECIAL
      IMPLICIT NONE
      INTEGER, INTENT(IN)  :: NSEND(*),SEND_DISPL(*),SEND_DATYP,NRECV(*)
      INTEGER, INTENT(IN)  :: RECV_DISPL(*),RECV_DATYP
      INTEGER, INTENT(OUT) :: IERR
      TYPE(ALG_TYPE), INTENT(IN)  :: SEND_BUFFER(*)
      TYPE(ALG_TYPE), INTENT(OUT) :: RECV_BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_MPI_ALLTOALLV_I
     &(SEND_BUFFER,NSEND,SEND_DISPL,SEND_DATYP,RECV_BUFFER,NRECV,
     & RECV_DISPL,RECV_DATYP,IERR)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)  :: SEND_BUFFER(*),NSEND(*),SEND_DISPL(*)
        INTEGER, INTENT(IN)  :: SEND_DATYP,NRECV(*),RECV_DISPL(*)
        INTEGER, INTENT(IN)  :: RECV_DATYP
        INTEGER, INTENT(OUT) :: RECV_BUFFER(*),IERR
      END SUBROUTINE
!
      SUBROUTINE P_MPI_ALLTOALL
     &(SEND_BUFFER,NSEND,SEND_DATYP,RECV_BUFFER,NRECV,RECV_DATYP,
     & IERR)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)  :: SEND_BUFFER(*),NSEND,SEND_DATYP,NRECV
        INTEGER, INTENT(IN)  :: RECV_DATYP
        INTEGER, INTENT(OUT) :: RECV_BUFFER(*),IERR
      END SUBROUTINE
!
      SUBROUTINE P_MPI_TYPE_COMMIT(DATA_TYPE,IERR)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)  :: DATA_TYPE
        INTEGER, INTENT(OUT) :: IERR
      END SUBROUTINE
!
      SUBROUTINE P_MPI_TYPE_FREE(DATA_TYPE,IERR)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)  :: DATA_TYPE
        INTEGER, INTENT(OUT) :: IERR
      END SUBROUTINE
!
      SUBROUTINE P_READ(BUFFER,NBYTES,SOURCE,TYPE)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NBYTES,SOURCE,TYPE
        DOUBLE PRECISION, INTENT(OUT) :: BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_WAIT_PARACO(IBUF,NB)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER,INTENT(IN) :: IBUF(*),NB
      END SUBROUTINE
!
      SUBROUTINE P_WRIT(BUFFER,NBYTES,DEST,TYPE)
        USE DECLARATIONS_SPECIAL
        IMPLICIT NONE
        INTEGER, INTENT(IN)          :: NBYTES,DEST,TYPE
        DOUBLE PRECISION, INTENT(IN) :: BUFFER(*)
      END SUBROUTINE
!
      SUBROUTINE P_ALLGATHERV_I
     &(SEND_BUFFER, SEND_COUNT, SEND_TYPE, RECV_BUFFER,
     & RECV_COUNT, DISPLS, RECV_TYPE, IERR)
        IMPLICIT NONE
        INTEGER, INTENT(IN)    :: SEND_BUFFER(*)
        INTEGER, INTENT(IN)    :: SEND_COUNT
        INTEGER, INTENT(IN)    :: SEND_TYPE
        INTEGER, INTENT(INOUT)   :: RECV_BUFFER(*)
        INTEGER, INTENT(IN)    :: RECV_COUNT(*)
        INTEGER, INTENT(IN)    :: DISPLS(*)
        INTEGER, INTENT(IN)    :: RECV_TYPE
        INTEGER, INTENT(OUT)   :: IERR
      END SUBROUTINE
!
!------------------------------------------------------------------------
!
      END INTERFACE
!
!=======================================================================
!
      END MODULE INTERFACE_PARALLEL
